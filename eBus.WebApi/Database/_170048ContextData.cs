using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace eBus.WebApi.Database
{
    public partial class _170048Context
    {
      
        partial void OnModelCreatingPartial(ModelBuilder modelBuilder)
        {

            
           
            modelBuilder.Entity<Drzava>().HasData( new WebApi.Database.Drzava() { 
                Id = 1,
                Naziv = "Bosna i Hercegovina"
            });

            modelBuilder.Entity<Grad>().HasData(new WebApi.Database.Grad()
            {
                Id = 1,
                Naziv = "Mostar",
                DrzavaId = 1
            });
            modelBuilder.Entity<Grad>().HasData(new WebApi.Database.Grad()
            {
                Id = 2,
                Naziv = "Sarajevo",
                DrzavaId = 1
            });

            modelBuilder.Entity<Uloga>().HasData(new WebApi.Database.Uloga()
            {
                Id = 1,
                Naziv = "Administrator"
            });

            modelBuilder.Entity<Uloga>().HasData(new WebApi.Database.Uloga()
            {
                Id = 2,
                Naziv = "Uposlenik"
            });

            string slika1FromSql = "
            List<byte> lista = new List<byte>();

            string hexPart1 = slika1FromSql.Substring(2);
            for (int i = 0; i < hexPart1.Length / 2; i++)
            {
                string hexNumber = hexPart1.Substring(i * 2, 2);
                lista.Add((byte)Convert.ToInt32(hexNumber, 16));
            }

            byte[] original1 = lista.ToArray();

            modelBuilder.Entity<Korisnici>().HasData(new WebApi.Database.Korisnici()
            {
                Id = 1,
                Ime = "Desktop",
                Prezime = "Test",
                Email = "desktop@mail.com",
                KorisnickoIme = "desktop",
                LozinkaSalt = "yZdkc3BmvECxX+waaC86Ig==",
                LozinkaHash = "9gCslij6VP1OyRiqNFEBoHKkdtM=",
                Status = true,
                Slika = original1
            });

            string slika2FromSql = "0x
            List<byte> lista1 = new List<byte>();

            string hexPart2 = slika2FromSql.Substring(2);
            for (int i = 0; i < hexPart2.Length / 2; i++)
            {
                string hexNumber = hexPart2.Substring(i * 2, 2);
                lista1.Add((byte)Convert.ToInt32(hexNumber, 16));
            }

            byte[] original2 = lista.ToArray();

            modelBuilder.Entity<Korisnici>().HasData(new WebApi.Database.Korisnici()
            {
                Id = 2,
                Ime = "Uposlenik",
                Prezime = "Test",
                Email = "uposlenik@mail.com",
                KorisnickoIme = "uposlenik",
                LozinkaSalt = "NLfhPm8aZqwuvG4CpRytUQ==",
                LozinkaHash = "65zLFSYrA5WmxUIBlo96+zeCas0=",
                Status = true,
                Slika = original2

            });

            modelBuilder.Entity<KorisniciUloge>().HasData(new WebApi.Database.KorisniciUloge()
            {
                Id = 1,
                KorisnikId = 1,
                UlogaId = 1,
                DatumIzmjene = DateTime.Now,

            });

            modelBuilder.Entity<KorisniciUloge>().HasData(new WebApi.Database.KorisniciUloge()
            {
                Id = 2,
                KorisnikId = 2,
                UlogaId = 2,
                DatumIzmjene = DateTime.Now,

            });

            string stringFromSQL = "
            List<byte> byteList = new List<byte>();

            string hexPart = stringFromSQL.Substring(2);
            for (int i = 0; i < hexPart.Length / 2; i++)
            {
                string hexNumber = hexPart.Substring(i * 2, 2);
                byteList.Add((byte)Convert.ToInt32(hexNumber, 16));
            }

            byte[] original = byteList.ToArray();

            modelBuilder.Entity<Putnik>().HasData(new WebApi.Database.Putnik()
            {
                Id = 1,
                Ime = "Mobile",
                Prezime = "Test",
                KorisnickoIme = "mobile",
                DatumRodjenja = new DateTime(1989, 5, 24),
                DatumRegistracije = DateTime.Now,
                Email = "mobile@mail.com",
                LozinkaSalt = "UKlofHqzbY1vOlg7NXGRKg==",
                LozinkaHash = "wMALKTYmL74ju10FSBgXqLXWRwQ=",
                Slika = original
            }) ;

            modelBuilder.Entity<Kompanija>().HasData(new WebApi.Database.Kompanija()
            {
                Id = 1,
                Naziv = "Autoprevoz-bus",
                Adresa = "Bisce polje bb",
                Email = "autoprevoz@mail.com",
                GradId = 1,
                KontaktBroj = "38736563222",

            });

            modelBuilder.Entity<Kompanija>().HasData(new WebApi.Database.Kompanija()
            {
                Id = 2,
                Naziv = "Centrotrans",
                Adresa = "Stefana Nemanje 12",
                Email = "centrotrans@mail.com",
                GradId = 2,
                KontaktBroj = "38733563222",

            });

            modelBuilder.Entity<Vozilo>().HasData(new WebApi.Database.Vozilo()
            {
                Id = 1,
                Model = "Lion's coach",
                Proizvodjac = "MAN",
                Registracija = "112-A-23E",
                KompanijaId = 1,
                BrojSjedista = 44,

            });

            modelBuilder.Entity<Vozilo>().HasData(new WebApi.Database.Vozilo()
            {
                Id = 2,
                Model = "COACH B4SC",
                Proizvodjac = "VOLVO",
                Registracija = "L23-K-298",
                KompanijaId = 2,
                BrojSjedista = 44,

            });
            #region voziloID1_Sjedista
            int brojacRedova = 1;
            int brojacKolona = 1;
            for (int i = 1; i <= 44; i++)
            {


                if (brojacKolona > 4)
                {
                    brojacKolona = 1;
                    brojacRedova++;
                }
                modelBuilder.Entity<Sjediste>().HasData(new WebApi.Database.Sjediste()
                {
                    Id = i,
                    VoziloId = 1,
                    Red = brojacRedova,
                    Kolona = brojacKolona++
                });

               


            }

            #endregion

            #region voziloID2_Sjedista

            int brojacRedovav2 = 1;
            int brojacKolonav2 = 1;
            for (int i = 45; i < 89; i++)
            {

                if (brojacKolonav2 > 4)
                {
                    brojacKolonav2 = 1;
                    brojacRedovav2++;
                }
                modelBuilder.Entity<Sjediste>().HasData(new WebApi.Database.Sjediste()
                {
                    Id = i,
                    VoziloId = 2,
                    Red = brojacRedovav2,
                    Kolona = brojacKolonav2++
                });

               


            }

            #endregion

            #region Linija Mostar-Sarajevo -> Cijena
            modelBuilder.Entity<Linija>().HasData(new WebApi.Database.Linija()
            {
                Id = 1,
                Naziv = "Mostar-Sarajevo",
                KorisnikId = 2,
                OdredisteId = 2,
                PolazisteId = 1,

            });


            modelBuilder.Entity<Cijena>().HasData(new WebApi.Database.Cijena()
            {
                Id = 1,
                LinijaId = 1,
                Iznos = 22,
                KompanijaId = 1,
                Popust = 0
            });

            modelBuilder.Entity<Cijena>().HasData(new WebApi.Database.Cijena()
            {
                Id = 2,
                LinijaId = 1,
                Iznos = 23,
                KompanijaId = 2,
                Popust = 0
            });
            #endregion




            modelBuilder.Entity<Angazuje>().HasData(new WebApi.Database.Angazuje()
            {
                Id = 1,
                VoziloId = 1,
                DatumAngazovanja = new DateTime(2020,6,14),
                DatumIsteka = new DateTime(2020,7,22),
                LinijaId = 1,



            });

            modelBuilder.Entity<Angazuje>().HasData(new WebApi.Database.Angazuje()
            {
                Id = 2,
                VoziloId = 2,
                DatumAngazovanja = new DateTime(2020, 6, 14),
                DatumIsteka = new DateTime(2020, 7, 22),
                LinijaId = 1,



            });


            #region karta_mostar_sarajevo_10_6_2020

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 1,
                AngazujeId = 1,
                BrojKarte = "affdsddvda",
                DatumIzdavanja = new DateTime(2020, 6, 10),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 2,
                AngazujeId = 1,
                BrojKarte = "arfelpdvda",
                DatumIzdavanja = new DateTime(2020, 6, 10),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 3,
                AngazujeId = 1,
                BrojKarte = "xrftlgdvdk",
                DatumIzdavanja = new DateTime(2020, 6, 10),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 4,
                AngazujeId = 1,
                BrojKarte = "xrftlgdvdk",
                DatumIzdavanja = new DateTime(2020, 6, 10),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 4
            });

            #endregion

            #region karta_mostar_sarajevo_26_6_2020
            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 5,
                AngazujeId = 1,
                BrojKarte = "affdstdoda",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 6,
                AngazujeId = 1,
                BrojKarte = "yetdsudvda",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 7,
                AngazujeId = 1,
                BrojKarte = "xetdszdvdp",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 8,
                AngazujeId = 1,
                BrojKarte = "xewdszxvlp",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 4
            });
            //-------------------------------------------------------------------------------------------
            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 9,
                AngazujeId = 2,
                BrojKarte = "retdsbxvlk",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 45
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 10,
                AngazujeId = 2,
                BrojKarte = "rxttxbxvpo",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 46
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 11,
                AngazujeId = 2,
                BrojKarte = "exwelbkvpt",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 47
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 12,
                AngazujeId = 2,
                BrojKarte = "krpeobkvpt",
                DatumIzdavanja = new DateTime(2020, 6, 26),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 48
            });

            #endregion

            #region karta_mostar_sarajevo_27_6_2020
            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 13,
                AngazujeId = 1,
                BrojKarte = "reztssxclp",
                DatumIzdavanja = new DateTime(2020, 6, 27),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 14,
                AngazujeId = 1,
                BrojKarte = "cdrtklxclp",
                DatumIzdavanja = new DateTime(2020, 6, 27),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 15,
                AngazujeId = 1,
                BrojKarte = "gdrrmlxctp",
                DatumIzdavanja = new DateTime(2020, 6, 27),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });

            // ---------------------------------------------------------------------------
            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 16,
                AngazujeId = 2,
                BrojKarte = "grtrklxcto",
                DatumIzdavanja = new DateTime(2020, 6, 27),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 45
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 17,
                AngazujeId = 2,
                BrojKarte = "rutfkyxcty",
                DatumIzdavanja = new DateTime(2020, 6, 27),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 46
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 18,
                AngazujeId = 2,
                BrojKarte = "wqtlkzxcth",
                DatumIzdavanja = new DateTime(2020, 6, 27),
                VrijemePolaska = new TimeSpan(10, 0, 0),
                VrijemeDolaska = new TimeSpan(12, 0, 0),
                SjedisteId = 47
            });

            #endregion

            #region karta_mostar_sarajevo_28_6_2020

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 19,
                AngazujeId = 1,
                BrojKarte = "tqvlkyxcrh",
                DatumIzdavanja = new DateTime(2020, 6, 28),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 20,
                AngazujeId = 1,
                BrojKarte = "xqvrkexvrk",
                DatumIzdavanja = new DateTime(2020, 6, 28),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });


            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 21,
                AngazujeId = 1,
                BrojKarte = "hqtrkecvrk",
                DatumIzdavanja = new DateTime(2020, 6, 28),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });
            #endregion

            #region karta_mostar_sarajevo_29_6_2020

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 22,
                AngazujeId = 1,
                BrojKarte = "yqbrmncvrk",
                DatumIzdavanja = new DateTime(2020, 6, 29),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 23,
                AngazujeId = 1,
                BrojKarte = "tqrmjncghk",
                DatumIzdavanja = new DateTime(2020, 6, 29),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 24,
                AngazujeId = 1,
                BrojKarte = "kqrjjncgkk",
                DatumIzdavanja = new DateTime(2020, 6, 29),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });

            #endregion

            #region karta_mostar_Sarajaevo_30_6_2020

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 25,
                AngazujeId = 1,
                BrojKarte = "rqrjzncggk",
                DatumIzdavanja = new DateTime(2020, 6, 30),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 26,
                AngazujeId = 1,
                BrojKarte = "rfrjgncvgt",
                DatumIzdavanja = new DateTime(2020, 6, 30),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 27,
                AngazujeId = 1,
                BrojKarte = "wqqjlnkggk",
                DatumIzdavanja = new DateTime(2020, 6, 30),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });
            #endregion

            #region karta_mostar_sarajevo_24_6_2020

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 28,
                AngazujeId = 1,
                BrojKarte = "qqfjlvksgr",
                DatumIzdavanja = new DateTime(2020, 6, 24),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 1
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 29,
                AngazujeId = 1,
                BrojKarte = "rtfjlmksgr",
                DatumIzdavanja = new DateTime(2020, 6, 24),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 2
            });
            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 30,
                AngazujeId = 1,
                BrojKarte = "kqfjllksgb",
                DatumIzdavanja = new DateTime(2020, 6, 24),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 3
            });
            #endregion

            #region karta_mostar_sarajevo_25_6_2020
            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 31,
                AngazujeId = 1,
                BrojKarte = "mqfjnlbsgv",
                DatumIzdavanja = new DateTime(2020, 6, 25),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 4
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 32,
                AngazujeId = 1,
                BrojKarte = "eqtjhlbsgv",
                DatumIzdavanja = new DateTime(2020, 6, 25),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 5
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 33,
                AngazujeId = 1,
                BrojKarte = "qwtjglbcgb",
                DatumIzdavanja = new DateTime(2020, 6, 25),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 6
            });

            modelBuilder.Entity<Karta>().HasData(new WebApi.Database.Karta()
            {
                Id = 34,
                AngazujeId = 1,
                BrojKarte = "pwtdglxcgy",
                DatumIzdavanja = new DateTime(2020, 6, 25),
                VrijemePolaska = new TimeSpan(8, 0, 0),
                VrijemeDolaska = new TimeSpan(10, 0, 0),
                SjedisteId = 7
            });


            #endregion


            modelBuilder.Entity<Novosti>().HasData(new WebApi.Database.Novosti()
            {
                Id = 1,
                DatumObjave = DateTime.Now,
                KorisnikId = 2,
                Naslov = "Vazna obavjest",
                Sadrzaj = "Nastavlja se red voznje uz smanjen obim"

            });

            modelBuilder.Entity<Notifikacije>().HasData(new WebApi.Database.Notifikacije()
            {
                Id = 1,
                Naslov = "Obavjest",
                NovostId = 1,
                DatumSlanja = DateTime.Now

            });

            modelBuilder.Entity<PutnikNotifikacije>().HasData(new WebApi.Database.PutnikNotifikacije()
            {
                Id = 1,
                NotifikacijaId = 1,
                PutnikId = 1,
                Pregledana = false,

            });

        }
    }
}